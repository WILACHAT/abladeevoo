"""
Django settings for project4 project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
import cloudinary
import cloudinary.uploader
import cloudinary.api

CELERY_BROKER_URL = 'redis://localhost:6379'   
CELERY_TIMEZONE = 'Asia/Bangkok'

TWILIO_ACCOUNT_SID = 'ACc07ad825a0ca00cd52e5fb7e47356963'
TWILIO_AUTH_TOKEN = '55c9bfc84659f8f93cdefbd06d3a38d9'
#echo "export TWILIO_ACCOUNT_SID='ACf29368bea963bcae69dd8fa07268e603'" > twilio.env
#echo "export TWILIO_AUTH_TOKEN='31f3e2bfd4b394b65179e5b34c462142'" >> twilio.env
#source ./twilio.env#


#SITE KEY RECAPTCHA
#6LdALikgAAAAABZj10DvMclBlWPsZ3D8mB3i-6C7

#SECRET KEY RECAPTCHA
#6LdALikgAAAAAKf0c3HrXIUxPC--TAs12bONvkzh



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '13kl@xtukpwe&xj2xoysxe9_6=tf@f8ewxer5n&ifnd46+6$%8'

ANYMAIL = {

    "SENDINBLUE_API_KEY": "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"
}

SENDINBLUE_API_URL = "https://api.sendinblue.com/v3/"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#if DEBUG:
    #EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # During development only

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#EMAIL_BACKEND='anymail.backends.sendinblue.EmailBackend'
EMAIL_HOST='smtp-relay.sendinblue.com'
EMAIL_PORT=587
#EMAIL_USE_TLS=True
#EMAIL_HOST_USER='vidma@vidma.tv'
#EMAIL_HOST_PASSWORD='fljkasdpnewdqfsx'
#ADMIN_EMAIL='Vidma Team <noreply@vidma.tv'



ALLOWED_HOSTS = ['plankton-app-d8rml.ondigitalocean.app', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'network',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary',
    'django_twilio',

    'django_celery_results',


    'django_celery_beat'
    ]
cloudinary.config( 
  cloud_name = "ablaze-project", 
  api_key = "482793736787258", 
  api_secret = "LROKHkhMt9OEq2ZjSLwR7R6ykXg" 
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

]

ROOT_URLCONF = 'project4.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project4.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ablaze',
        'USER': 'postgres',
        'PASSWORD': 'Kickyourass123/',
        'HOST': 'localhost',
        'PORT': '',

    }
}

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ablaze'
        
    }
}



POSTGRES_DB = os.environ.get("POSTGRES_DB")
POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD")
POSTGRES_USER = os.environ.get("POSTGRES_USER")
POSTGRES_HOST = os.environ.get("POSTGRES_HOST")
POSTGRES_PORT = os.environ.get("POSTGRES_PORT")

POSTGRES_READY = (
    POSTGRES_DB is not None
    and POSTGRES_PASSWORD is not None
    and POSTGRES_USER is not None
    and POSTGRES_HOST is not None
    and POSTGRES_PORT is not None
)

if POSTGRES_READY:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": POSTGRES_DB,
            "USER": POSTGRES_USER,
            "PASSWORD": POSTGRES_PASSWORD,
            "HOST": POSTGRES_HOST,
            "PORT": POSTGRES_PORT,
        }
    }
'''
AUTH_USER_MODEL = "network.User"

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Bangkok'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'
